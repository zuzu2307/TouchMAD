/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

Screen2ViewBase::Screen2ViewBase() :
    buttonCallback(this, &Screen2ViewBase::buttonCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    buttonWithLabel1.setXY(0, 212);
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    buttonWithLabel1.setLabelText(touchgfx::TypedText(T_SINGLEUSEID17));
    buttonWithLabel1.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel1.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel1.setAction(buttonCallback);

    lineProgress1.setXY(38, 178);
    lineProgress1.setProgressIndicatorPosition(0, 0, 404, 34);
    lineProgress1.setRange(0, 100);
    lineProgress1.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_LARGE_PROGRESS_INDICATOR_BG_ROUND_0_DEGREES_ID));
    lineProgress1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 151, 255));
    lineProgress1.setPainter(lineProgress1Painter);
    lineProgress1.setStart(17, 17);
    lineProgress1.setEnd(387, 17);
    lineProgress1.setLineWidth(30);
    lineProgress1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    lineProgress1.setValue(60);

    textArea1.setXY(116, 0);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID18));

    circle1.setPosition(200, 72, 80, 80);
    circle1.setCenter(40, 40);
    circle1.setRadius(40);
    circle1.setLineWidth(0);
    circle1.setArc(0, 360);
    circle1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(52, 181, 214));
    circle1.setPainter(circle1Painter);

    shape1.setPosition(199, 77, 80, 80);
    shape1.setOrigin(0.000f, 0.000f);
    shape1.setScale(0.800f, 0.900f);
    shape1.setAngle(0.000f);
    shape1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(240, 219, 219));
    shape1.setPainter(shape1Painter);
    const touchgfx::AbstractShape::ShapePoint<float> shape1Points[3] = { { 40.000f, 0.000f }, { 80.000f, 40.000f }, { 40.000f, 80.000f } };
    shape1.setShape(shape1Points);

    add(box1);
    add(buttonWithLabel1);
    add(lineProgress1);
    add(textArea1);
    add(circle1);
    add(shape1);
}

void Screen2ViewBase::setupScreen()
{

}

void Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to screen
        //Go to screen with no screen transition
        application().gotoscreenScreenNoTransition();
    }
}
